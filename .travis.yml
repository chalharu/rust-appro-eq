language: rust

rust:
- stable
- beta
- nightly

sudo: false

os:
- linux

matrix:
  allow_failures:
  - rust: nightly

addons:
  apt:
    packages:
    - libcurl4-openssl-dev
    - libelf-dev
    - libdw-dev
    - binutils-dev
    - libiberty-dev

before_script:
- |
    if [ "${TRAVIS_OS_NAME}" = 'osx' ]; then
      export PATH=$HOME/Library/Python/2.7/bin:$PATH
    fi
- |
  if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    cargo install cargo-kcov
    mkdir kcov
    cd kcov
    cargo kcov --print-install-kcov-sh | sh
    cd ${TRAVIS_BUILD_DIR}
    rm -rf kcov
  fi
- |
  if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    pip install 'ghp-import' --user
    pip install 'pytoml' --user
    export CARGO_PACKAGE_NAME=$(python2 << __EOF__                                                                                                                            [...t/working/Rust/nearly-eq](develop|âœš3)
    import pytoml as toml
    with open('Cargo.toml', 'rb') as fin:
        obj = toml.load(fin)

    print(obj["package"]["name"])
    __EOF__
    )
    echo CARGO_PACKAGE_NAME=$CARGO_PACKAGE_NAME
  fi

script:
- cargo build
- |
  if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    cargo kcov --coveralls
  else
    cargo test
  fi
- cargo test --release
- |
  if [ "$TRAVIS_RUST_VERSION" = "nightly" ]; then
    cargo bench --verbose
  fi
- |
  if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    cargo doc --no-deps &&
    echo "<meta http-equiv=refresh content=0;url=`echo $CARGO_PACKAGE_NAME`/index.html>" > target/doc/index.html &&
    ghp-import -n target/doc
  fi
- |
  if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    cargo login ${CRATES_TOKEN} &&
    cargo package
  fi

after_success:
- |
  if [ "${TRAVIS_OS_NAME}" = "linux" ] &&
     [ "${TRAVIS_RUST_VERSION}" = "stable" ] &&
     [ "${TRAVIS_BRANCH}" = "master" ] &&
     [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then
    git push -fq https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git gh-pages &&
    cargo publish
  fi

env:
  global:
    secure: qwMSXpdCryGDyfiy1lXEcR/kWhATlQGVNAqV83n9uBKDLP6WsX4C25zMAz1/0wkjiorBMNFGhxMLI956md7V84sLX+6FNfA0tRODtAnJYyjR3AX4RkXB6zFhbTqWg/2BAefJ7Y7Vy0qKLKbqFq6023lKg09Mk80fEReba4PisrMgfj3LCCUarAnxfuFnAB7LmlvWXHNd3w+x6dV8fxO0Zw6QoqB9wQQvQzIiApqWCTyoxQhW+qzo6bXrctPct/OGNhmf4I0l1QJBGPN6qpFrxSjFljbxqIBiagCb6k1WERpok2FiNjhXCowUhTMyaGIlZLaVLjuISu8+aCyHZqK/yQLIDwWm5iY3Ko1gUbhvcg3aQV2ovpN8nxrQaiEkhg8mUPDPG0NencibFItb510L/VK3UkBWgTcKmwMjsqErh/l3a6UvezSAkUHrkMMAGLSrKnveFXeGCTwePLN40NgqJzuKsaSL+gqlTP7dHVtWpsBIvmrK7x4ItwWGRETYQR9HJQbeX+bxQSDJRpkuSTmY1iFL6GF1R0SNRYjXIeZ8Ei8F6O0RqUl7sWjMf9KEWD1LVkWj3X8eM+lTLyNSzP9BGlTP/Q34oJ2LKc4lYj59NE5ai4/rzfz0p8/ANoEJxUJoYgkdl90jw90UltPEjxD7YeCJ8WVhB4tp72qV44RtlDA=

cache:
  cargo: true
  apt: true
  pip: true

