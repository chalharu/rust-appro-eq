var searchIndex = JSON.parse('{\
"appro_eq":{"doc":"Trait for approximately equality comparisons.","i":[[4,"ApproEqError","appro_eq","",null,null],[13,"LengthMismatch","","",0,null],[13,"NonNumDifference","","",0,null],[13,"DividedByZero","","",0,null],[13,"Overflow","","",0,null],[13,"ComponentError","","",0,null],[8,"RelError","","",null,null],[10,"rel_error","","This method tests for self(actual value) and expected…",1,[[],[["option",4],["result",4],["approeqerror",4]]]],[8,"AbsError","","",null,null],[10,"abs_error","","This method tests for self(actual value) and expected…",2,[[],[["option",4],["result",4],["approeqerror",4]]]],[8,"AbsTolerance","","",null,null],[10,"abs_tolerance","","",3,[[]]],[8,"RelTolerance","","",null,null],[10,"rel_tolerance","","",4,[[]]],[8,"Tolerance","","",null,null],[10,"tolerance","","",5,[[]]],[8,"AbsApproEqWithTol","","Trait for approximately equality comparisons.",null,null],[10,"abs_appro_eq_with_tol","","This method tests for approximately equal.",6,[[]]],[11,"abs_appro_ne_with_tol","","This method tests for not approximately equal.",6,[[]]],[8,"AbsApproEq","","Trait for approximately equality comparisons.",null,null],[10,"abs_appro_eq","","This method tests for approximately equal.",7,[[]]],[11,"appro_ne_abs","","This method tests for not approximately equal.",7,[[]]],[8,"RelApproEqWithTol","","Trait for approximately equality comparisons.",null,null],[10,"rel_appro_eq_with_tol","","This method tests for approximately equal.",8,[[]]],[11,"appro_ne_rel_with_tol","","This method tests for not approximately equal.",8,[[]]],[8,"RelApproEq","","Trait for approximately equality comparisons.",null,null],[10,"rel_appro_eq","","This method tests for approximately equal.",9,[[]]],[11,"rel_appro_ne","","This method tests for not approximately equal.",9,[[]]],[14,"assert_appro_eq","","Asserts that two expressions are approximately equal to…",null,null],[14,"assert_appro_eq_abs","","Asserts that the absolute error of the two expressions is…",null,null],[14,"assert_appro_eq_rel","","Asserts that the relative error of the two expressions is…",null,null],[14,"debug_assert_appro_eq","","Asserts that two expressions are approximately equal to…",null,null],[14,"debug_assert_appro_eq_abs","","Asserts that the absolute error of the two expressions is…",null,null],[14,"debug_assert_appro_eq_rel","","Asserts that the relative error of the two expressions is…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"cause","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"ApproEqError"],[8,"RelError"],[8,"AbsError"],[8,"AbsTolerance"],[8,"RelTolerance"],[8,"Tolerance"],[8,"AbsApproEqWithTol"],[8,"AbsApproEq"],[8,"RelApproEqWithTol"],[8,"RelApproEq"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);